#include <ESP8266WiFi.h>
#include <PubSubClient.h>

#define LIGHT_PIN1 D2
#define LIGHT_PIN2 D6

// Update these with values suitable for your network.

const char* ssid = "mummu";
const char* password = "12345678";
const char* mqtt_server = "broker.emqx.io";
const char* mqtt_username = "esp66";
const char* mqtt_password = "esp777";

WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;
char msg[50];

void setup_wifi() {

  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();

  // Switch on the LIGHT 1 if an 1 was received as first character
  if ((char)payload[0] == '0') {
    digitalWrite(LIGHT_PIN1,HIGH);
  } else{
    digitalWrite(LIGHT_PIN1,LOW);
  }
  // Switch on the LIGHT 2 if an 1 was received as second character
  if ((char)payload[1] == '0') {
    digitalWrite(LIGHT_PIN2,HIGH);
  } else{
    digitalWrite(LIGHT_PIN2,LOW);
  }

}

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    
    if (client.connect(clientId.c_str(),mqtt_username,mqtt_password)) {
      
      Serial.println("connected");
      client.subscribe("udbb");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup() {
  pinMode(LIGHT_PIN1,OUTPUT);
  pinMode(LIGHT_PIN2,OUTPUT);
  Serial.begin(115200);
  digitalWrite(LIGHT_PIN1,HIGH);
  digitalWrite(LIGHT_PIN2,HIGH);
  setup_wifi();
  
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

void loop() {

  unsigned long now = millis();
  if (now - lastMsg > 1000) {
    lastMsg = now;
    snprintf (msg, 50, "[{\"name\":\"ESP Online for\",\"data\":\"%d ms\"}]",now);
    Serial.print("Publish message: ");
    Serial.println(msg);
    client.publish("bccc",msg);
  }

  if (!client.connected()) {
    reconnect();
  }
  client.loop();

}
